import disnake
from disnake.ext import commands
from disnake import Colour

from PIL import Image, ImageDraw, ImageFont

import requests
import numpy as np
from io import BytesIO

import datetime
import pytz
from babel.dates import format_date

from element.colour import colour_f


class InfoServer(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready (self):
        print(f"–ë–æ—Ç {self.bot.user} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–≥ {__name__}")

    @commands.slash_command(name = "—Å–µ—Ä–≤–µ—Ä", description = "–í—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ!")
    async def get_server_info(self, ctx, ui: str = commands.Param(default="–¢–æ–ª—å–∫–æ —è", name="–≤–∏–¥–∏–º–æ—Å—Ç—å", choices=["–¢–æ–ª—å–∫–æ —è", "–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–∞"])):
        guild = ctx.guild

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        bot_count = sum(1 for member in guild.members if member.bot)
        human_count = guild.member_count - bot_count

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        status_counts = {status: sum(1 for member in guild.members if member.status == status) for status in disnake.Status}
        streaming = sum(1 for member in guild.members if any(activity.type == disnake.ActivityType.streaming for activity in member.activities))
        online = status_counts.get(disnake.Status.online, 0) - streaming
        offline = status_counts.get(disnake.Status.offline, 0)
        idle = status_counts.get(disnake.Status.idle, 0)
        dnd = status_counts.get(disnake.Status.dnd, 0)
        invisible = status_counts.get(disnake.Status.invisible, 0)
        do_not_disturb = status_counts.get(disnake.Status.do_not_disturb, 0)

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
        category_channels = sum(1 for channel in guild.channels if isinstance(channel, disnake.CategoryChannel))
        text_channels = sum(1 for channel in guild.text_channels if not isinstance(channel, disnake.CategoryChannel))
        voice_channels = sum(1 for channel in guild.voice_channels)
        total_channels = len(guild.channels) - category_channels
        forum_channels = len(guild.forum_channels)
        announcement_channels = sum(1 for channel in guild.text_channels if channel.is_news())
        rules_channel = guild.rules_channel.mention if guild.rules_channel else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
        verification_level = {"none": "–ù–µ—Ç", "low": "–ù–∏–∑–∫–∏–π", "medium": "–°—Ä–µ–¥–Ω–∏–π", "high": "–í—ã—Å–æ–∫–∏–π", "highest": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π"}.get(guild.verification_level.name, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")

        guild_icon = guild.icon
        em = disnake.Embed(title = f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}", colour = Colour.blurple() if guild_icon is None else Colour.from_rgb(*k) if (k := await colour_f(guild_icon.url)) else Colour.blurple()).add_field(name = "ID —Å–µ—Ä–≤–µ—Ä–∞:", value = f"```{guild.id}```", inline = False).add_field(name = "–£—á–∞—Å—Ç–Ω–∏–∫–∏:", value = f"üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {guild.member_count}\nüßë –õ—é–¥–µ–π: {human_count}\nü§ñ –ë–æ—Ç–æ–≤: {bot_count}\n", inline = True).add_field(name = "–°—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value = f"üíö –û–Ω–ª–∞–π–Ω: {online}\nüåô –ù–µ–∞–∫—Ç–∏–≤–µ–Ω: {idle}\n‚ùå –û—Ñ—Ñ–ª–∞–π–Ω: {offline}\n‚õî –ù–µ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å: {dnd}", inline = True).add_field(name = "–ö–∞–∫–Ω–∞–ª—ã", value = f"‚úèÔ∏è –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {total_channels}\nüìù –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {voice_channels}\nüîä –ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {voice_channels}", inline = True).add_field(name = "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:", value = f"üî¥ –°—Ç—Ä–∏–º–∏—Ç: {streaming}\nüëª –ù–µ–≤–∏–¥–∏–º—ã–π: {invisible}\nü§ö –ü—Ä–æ–∑–±–∞ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: {do_not_disturb}", inline = True).add_field(name = "–î—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value = f"üìÅ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {category_channels}\nüìú –ö–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏: {rules_channel}\n", inline = True).add_field(name = "–î—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", value = f"üí¨ –ö–∞–Ω–ª–æ–≤-—Ñ–æ—Ä—É–º–æ–≤: {forum_channels}\nüì¢ –ö–∞–Ω–∞–ª–æ–≤ —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏: {announcement_channels}").add_field(name = "–°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞:", value = guild.owner.mention, inline = True).add_field(name = "–£—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞:", value = verification_level, inline = True).add_field(name = "–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω:", value = format_date(guild.created_at, format='d MMMM yyyy –≥.', locale='ru_RU'))
        if guild_icon: em.set_thumbnail(url=(guild_icon_url := guild_icon.url))
        else: guild_icon_url = None
        await ctx.send(embed = em, ephemeral=True if ui == "–¢–æ–ª—å–∫–æ —è" else False, view = disnake.ui.View() if guild_icon_url is None else disnake.ui.View().add_item(disnake.ui.Button(label="–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä —Å–µ—Ä–≤–µ—Ä–∞", emoji="üëç", url=guild_icon_url)))

def setup(bot):
    bot.add_cog(InfoServer (bot))
